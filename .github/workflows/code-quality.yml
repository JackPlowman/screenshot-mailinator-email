name: "Code Quality"

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: read
  packages: read
  statuses: write

jobs:
  check-code-quality:
    name: Check Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.1
        with:
          fetch-depth: 0

      # Lint and Format everything but Python
      - name: Lint Code Base
        uses: super-linter/super-linter/slim@v7.1.0
        env:
          VALIDATE_ALL_CODEBASE: true
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          LINTER_RULES_PATH: .github/super-linter-configurations
          YAML_ERROR_ON_WARNING: true
          VALIDATE_PYTHON_BLACK: false
          VALIDATE_PYTHON_FLAKE8: false
          VALIDATE_PYTHON_ISORT: false
          VALIDATE_PYTHON_MYPY: false
          VALIDATE_PYTHON_PYLINT: false
          VALIDATE_PYTHON_RUFF: false
          VALIDATE_PYTHON_PYINK: false

  check-python-code-format-and-quality:
    name: Check Python Code Format and Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.1
        with:
          fetch-depth: 0

      - name: Install Poetry
        run: pipx install poetry==1.8.4

      - name: Install Python 3.13 with Poetry Cache
        uses: actions/setup-python@v5.2.0
        with:
          python-version-file: "pyproject.toml"
          cache: "poetry"

      - name: Set up Just
        uses: extractions/setup-just@v2

      - name: Install Poetry Dependencies
        run: just install

      - name: Check Python Code Quality (Ruff)
        run: just ruff-lint

      - name: Check Python Code Format (Ruff)
        run: just ruff-format

      - name: Check Python Code for Dead Code (Vulture)
        run: just vulture
